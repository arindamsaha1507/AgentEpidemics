var documenterSearchIndex = {"docs":
[{"location":"#A-Simple-Julia-Package-for-SIRS-Epidemiological-Model","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"","category":"section"},{"location":"#Introduction-to-the-SIRS-Model","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Introduction to the SIRS Model","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"The SIRS model is a classic epidemiological model used to describe the spread of infectious diseases within a population. It is a compartmental model that categorizes individuals into three main groups or compartments:","category":"page"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"Susceptible (S): Individuals who are healthy but can become infected if exposed to the disease.\nInfected (I): Individuals who are currently infected and can spread the disease to susceptible individuals.\nRecovered (R): Individuals who have recovered from the disease and have temporary immunity.","category":"page"},{"location":"#Dynamics-of-the-SIRS-Model","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Dynamics of the SIRS Model","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"In the SIRS model, individuals transition between the three compartments over time, following a specific flow:","category":"page"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"S → I (Infection): Susceptible individuals can become infected if they come into contact with an infected person. The rate of infection depends on the contact rate and the infection probability.\nI → R (Recovery): Infected individuals eventually recover from the disease, moving into the recovered category. This transition occurs at a rate determined by the average duration of the infection.\nR → S (Loss of Immunity): Unlike the simpler SIR model, where recovered individuals gain permanent immunity, in the SIRS model, individuals lose immunity after a period of time and become susceptible again. This makes the SIRS model particularly useful for studying diseases where immunity is temporary, such as the flu.","category":"page"},{"location":"#Applications-of-the-SIRS-Model","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Applications of the SIRS Model","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"The SIRS model is widely used in epidemiology to study diseases where immunity is not lifelong, such as:","category":"page"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"Influenza (seasonal flu)\nCommon cold\nCertain bacterial infections","category":"page"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"By adjusting the parameters of the model (such as the infection, recovery, and immunity loss rates), the SIRS model can simulate different disease dynamics and predict the outcome of various public health interventions, such as vaccination campaigns or quarantine measures.","category":"page"},{"location":"#Limitations","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Limitations","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"While the SIRS model provides valuable insights into disease dynamics, it is still a simplified model. It assumes that all individuals are equally likely to interact, which may not be realistic for diseases that spread in structured populations or networks. Moreover, it does not account for factors such as age, mobility, or variations in immunity levels, which can also influence the spread of disease.","category":"page"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"Nevertheless, the SIRS model serves as a foundational tool in epidemiology, allowing researchers to explore the basic principles of infectious disease modelling.","category":"page"},{"location":"#Implementation-in-the-package","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Implementation in the package","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"In the AgentEpidemics.jl package, the SIRS model is implemented using an agent-based approach. Rather than solving differential equations as in the classical compartmental models, this approach simulates the behavior of individual agents who transition between the Susceptible (S), Infectious (I), and Recovered (R) states. The following sections explain how different components of the SIRS model are implemented.","category":"page"},{"location":"#Agents","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Agents","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"Each agent in the simulation is represented by an instance of the Agent struct. An agent has the following properties:","category":"page"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"id: A unique identifier for the agent.\nhealth: The health status of the agent, which can be 'Susceptible', 'Infected', or 'Recovered'.\nlocation: A tuple representing the agent's position in a 2D space.\nspeed: The agent's speed, determining how far they can move in each time step.\ncontacts: A list of other agents with whom this agent has come into contact.","category":"page"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"Here is how the Agent struct is defined:","category":"page"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"mutable struct Agent\n    id::Int\n    health::String\n    location::Tuple{Float64, Float64}\n    speed::Float64\n    contacts::Vector{Int}\nend","category":"page"},{"location":"#Agent-Movement","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Agent Movement","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"Each agent moves randomly in the simulation space during each time step. We handle this behavior by updating the location of each agent based on their speed and a random direction. The agents' movement ensures dynamic interaction between individuals, enabling them to form new contacts during the simulation, which is essential for the spread of infection.","category":"page"},{"location":"#Disease-Transmission","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Disease Transmission","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"In the SIRS model, disease transmission occurs when a susceptible agent comes into contact with an infected agent. When two agents are within the defined contact radius, and one of them is infected, the susceptible agent has a chance of becoming infected based on the infection probability.","category":"page"},{"location":"#Recovery-and-Immunity-Loss","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Recovery and Immunity Loss","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"After a certain period, infected agents can recover based on a given recovery probability. The infected agents are then moved to the Recovered (R) state.","category":"page"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"However, immunity in the SIRS model is temporary. After the loss of immunity, the recoved agents become susceptible again, completing the SIRS cycle.","category":"page"},{"location":"#Simulation-Evolution","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Simulation Evolution","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"During each time step, the following processes occur:","category":"page"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"Agents move within the simulation space.\nDisease spreads between agents based on their contacts.\nInfected agents recover and move to the recovered state.\nRecovered agents lose immunity and become susceptible again.","category":"page"},{"location":"#API-References","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"API References","text":"","category":"section"},{"location":"#Data-Structures","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Data Structures","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"\nSettings\n\nSimulationOutput\n","category":"page"},{"location":"#AgentEpidemics.Settings","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"AgentEpidemics.Settings","text":"struct Settings\n\nRepresents the settings for the simulation.\n\nFields\n\nn: The number of agents in the simulation.\ntotal_time: The total time steps for the simulation.\ninitial_infection_probability: The probability that an agent is initially infected.\nside_length: The size of the simulation area.\ncontact_radius: The maximum distance at which agents can come into contact.\nmean_speed: The mean speed of the agents.\nstd_speed: The standard deviation of the speed of the agents.\ninfection_probability: The probability of infection.\nrecovery_probability: The probability of recovery.\nimmunity_loss_probability: The probability of losing immunity.\nrecord: A boolean indicating whether to record the system state.\nrecord_file: The name of the file to record the system state.\n\n\n\n\n\n","category":"type"},{"location":"#AgentEpidemics.SimulationOutput","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"AgentEpidemics.SimulationOutput","text":"struct SimulationOutput\n\nRepresents the output of the simulation.\n\nFields\n\nstates: A dataframe representing the number of agents in each health state at each time step.\npositions: A dataframe representing the position and health of each agent at each time step.\n\n\n\n\n\n","category":"type"},{"location":"#Running-Simulation","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Running Simulation","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"\nrun_simulation(n::Int, total_time::Int, initial_infection_probability::Float64, side_length::Float64, contact_radius::Float64, mean_speed::Float64, std_speed::Float64, infection_probability::Float64, recovery_probability::Float64, immunity_loss_probability::Float64, record::Bool=false, record_file::String=\"Timeseries.csv\")\n\n\nrun_simulation(filename::String)\n\nrun_simulation(settings::Settings)\n","category":"page"},{"location":"#AgentEpidemics.run_simulation","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"AgentEpidemics.run_simulation","text":"run_simulation(n::Int, total_time::Int, initial_infection_probability::Float64, side_length::Float64, contact_radius::Float64, mean_speed::Float64, std_speed::Float64, infection_probability::Float64, recovery_probability::Float64, immunity_loss_probability::Float64, record::Bool=false, record_file::String=\"Timeseries.csv\")\n\nRun the simulation with the specified parameters.\n\nArguments\n\nn::Int: The number of agents in the simulation.\ntotal_time::Int: The total time steps for the simulation.\ninitial_infection_probability::Float64: The probability that an agent is initially infected.\nside_length::Float64: The size of the simulation area.\ncontact_radius::Float64: The maximum distance at which agents can come into contact.\nmean_speed::Float64: The mean speed of the agents.\nstd_speed::Float64: The standard deviation of the speed of the agents.\ninfection_probability::Float64: The probability of infection.\nrecovery_probability::Float64: The probability of recovery.\nimmunity_loss_probability::Float64: The probability of losing immunity.\nrecord::Bool: A boolean indicating whether to record the system state.\nrecord_file::String: The name of the file to record the system state.\n\nReturns\n\nA dataframe representing the system state at each time step.\n\n\n\n\n\n","category":"function"},{"location":"#AgentEpidemics.run_simulation-Tuple{String}","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"AgentEpidemics.run_simulation","text":"run_simulation(filename::String)\n\nRun the simulation with the settings specified in a YAML file.\n\nArguments\n\nfilename::String: The name of the YAML file containing the simulation settings.\n\nReturns\n\nA dataframe representing the system state at each time step.\n\n\n\n\n\n","category":"method"},{"location":"#AgentEpidemics.run_simulation-Tuple{Settings}","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"AgentEpidemics.run_simulation","text":"run_simulation(settings::Settings)\n\nRun the simulation with the specified settings.\n\nArguments\n\nsettings::Settings: The simulation settings.\n\nReturns\n\nA dataframe representing the system state at each time step.\n\n\n\n\n\n","category":"method"},{"location":"#Plotting","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"Plotting","text":"","category":"section"},{"location":"","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"A Simple Julia Package for SIRS Epidemiological Model","text":"\nplot_agents(sim_output::SimulationOutput, time::Int)\n\nplot_states(sim_output::SimulationOutput)\n","category":"page"},{"location":"#AgentEpidemics.plot_agents-Tuple{SimulationOutput, Int64}","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"AgentEpidemics.plot_agents","text":"plot_agents(sim_output::SimulationOutput, time::Int)\n\nPlots the agents in the simulation at a specific time. The agents are colored according to their health.\n\nArguments\n\nsim_output::SimulationOutput: The simulation output.\ntime::Int: The time at which to plot the agents.\nsavefig::Bool=false: A boolean indicating whether to save the plot as a PNG file.\n\nReturns\n\nThe plot object.\n\n\n\n\n\n","category":"method"},{"location":"#AgentEpidemics.plot_states-Tuple{SimulationOutput}","page":"A Simple Julia Package for SIRS Epidemiological Model","title":"AgentEpidemics.plot_states","text":"plot_states(sim_output::SimulationOutput)\n\nPlots the number of agents in each health state over time.\n\nArguments\n\nsim_output::SimulationOutput: The simulation output.\nsavefig::Bool=false: A boolean indicating whether to save the plot as a PNG file.\n\nReturns\n\nThe plot object.\n\n\n\n\n\n","category":"method"}]
}
